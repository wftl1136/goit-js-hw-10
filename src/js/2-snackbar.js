const feedbackForm = document.querySelector('.feedback-form');
const emailInput = feedbackForm.elements.email;
const messageInput = feedbackForm.elements.message;
const localStorageKey = 'feedback-form-state';
const maxCount = 400;
const regex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
const errorMessage = document.getElementById('email-error');
const chek = document.querySelector('.chek');
const countNumber = document.getElementById('countNumber');
const messageCounter = document.querySelector('.message-counter');
const stopRegex = /[^a-zA-Z0-9._@-]/;

let formData = {
  email: '',
  message: '',
};

// –ü–∞—Ä—Å–∏–º–æ –ª–æ–∫–∞–ª—å–Ω–µ —Å—Ö–æ–≤–∏—â–µ –∑ –ø–æ—Ç—Ä—ñ–±–Ω–∏–º –Ω–∞–º –∫–ª—é—á–µ–º —ñ –≤–∏—Ç—è–≥—É—î–º –∑ –Ω—å–æ–≥–æ –¥–∞–Ω—ñ –≤ FormData
const savedData = JSON.parse(localStorage.getItem(localStorageKey)) || {};
formData = {
  email: savedData.email || '',
  message: savedData.message || '',
};
//console.log('üöÄ ~ formData:', formData);

// –∑–∞–ø–æ–≤–Ω—é—î–º–æ –¥–∞–Ω—ñ –ø–æ–ª—ñ–≤ –≤–≤–æ–¥—É
emailInput.value = formData.email;
messageInput.value = formData.message;
if (emailInput.value) {
  validateEmail(emailInput);
}

if (messageInput.value) {
  counterNumber(messageInput);
}

//–î–æ–¥–∞—î–º–æ —Å–ª—É—Ö–∞—á–∞ –Ω–∞ input —ñ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –¥–µ–ª–µ–≥—É–≤–∞–Ω–Ω—è –≤—ñ—à–∞—î–º –π–æ–≥–æ –Ω–∞ —Ñ–æ—Ä–º—É
feedbackForm.addEventListener('input', saveToLocalStr);

function saveToLocalStr(event) {
  // –∑–∞–ø–∏—Å—É—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è —ñ–Ω–ø—É—Ç –≤ formData, –ø–µ—Ä–µ–¥ –∑–∞–ø–∏—Å–æ–º –ø–æ–∑–±—É–≤–∞—î–º–æ—Å—è –ª–∏—à–Ω—ñ—Ö –∑–Ω–∞–∫—ñ–≤ —Ç–∞–±—É–ª—è—Ü—ñ—ó(–ø—Ä–æ–±—ñ–ª —ñ –µ–Ω—Ç–µ—Ä)
  validateEmail(emailInput);
  counterNumber(messageInput);
  formData[event.target.name] = event.target.value.trim();
  console.log("üöÄ ~ saveToLocalStr ~ formData:", formData)
  

  // –∑–∞–ø–∏—Å—É—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è formData –ª–æ–∫–∞–ª—å–Ω–µ —Å—Ö–æ–≤–∏—â–µ
  localStorage.setItem(localStorageKey, JSON.stringify(formData));
}

// –î–æ–¥–∞—î–º–æ —Å–ª—É—Ö–∞—á–∞ –Ω–∞ –∫–Ω–æ–ø–∫—É submit, –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –Ω–∞ –ø—É—Å—Ç—ñ –ø–æ–ª—è, —è–∫—â–æ –≤—Å–µ –æ–∫: –≤–∏–≤–æ–¥–∏–º–æ –¥–∞–Ω—ñ –≤ –∫–æ–Ω—Å–æ–ª—å —ñ –≤—Å–µ –æ—á–∏—â—É—î–º–æ
feedbackForm.addEventListener('submit', event => {
  event.preventDefault();
  if (!formData.email || !formData.message) {
    return alert('Fill please all fields');
  }
  console.log('formData:', formData);
  localStorage.removeItem(localStorageKey);
  formData.email = '';
  formData.message = '';
  feedbackForm.reset();
  counterNumber(messageInput);
  countNumber.textContent = `0/${maxCount}`;
    messageCounter.classList.add('hidden');
    chek.classList.add('hidden');
});



// –ø—Ä–æ–≤–æ–¥–∏–º–æ –≤–∞–ª—ñ–¥–∞—Ü—ñ—é –≤–≤–µ–¥–µ–Ω–æ–≥–æ –µ–º–∞–π–ª
function validateEmail(emailInput) {
  //console.log("üöÄ ~ validateEmail ~ FirstemailInput.value:", emailInput.value)
  let email = emailInput.value;
    // –¥–æ–¥–∞—î–º–æ –∑–∞–±–æ—Ä–æ–Ω—É –≤–≤–æ–¥—É –∫–∏—Ä–∏–ª–µ—Ü–µ—é. —Ç–∞ –∑–Ω–∞–∫—ñ–≤ —Ç–∞–±—É–ª—è—Ü—ñ—ó
    
 // emailInput.value = emailInput.value.replace(stopRegex, '');
 // console.log("üöÄ replaseInputValue ~ replaseeEmailInput.value:", emailInput.value)
 
    //–ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –º–µ—Ç–æ–¥ –Ω–µ –ø—ñ–¥—ñ–π—à–æ–≤, –±—Ä–∞—É–∑–µ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –º—ñ–Ω—è–≤ –≤ –¥–æ–º–µ–Ω—ñ  –ø–µ—Ä—à–∏–π —Å–∏–º–≤–æ–ª –∫–∏—Ä–∏–ª–∏—Ü—ñ –≤ Punycode;
    //–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º –ø–æ–¥—ñ—é beforeinput
    emailInput.addEventListener('beforeinput', (event) => {
    const inputChar = event.data;
    if (stopRegex.test(inputChar)) {
        event.preventDefault();
    }
});

    
    if (stopRegex.test(email)) {
    chek.classList.add('hidden');
    errorMessage.classList.add('error-message');
    errorMessage.textContent =
          '‚ùó –ë—É–¥—å –ª–∞—Å–∫–∞ –Ω–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –∫–∏—Ä–∏–ª–∏—Ü—é —á–∏ —Ç–∞–±—É–ª—è—Ü—ñ—é –ø—Ä–∏ –≤–≤–æ–¥—ñ!';
      
    return;
  }
  if (!email) {
    emailInput.classList.remove('error');
    errorMessage.classList.remove('error-message');
    errorMessage.textContent = '';
      return;
  }
  if (!regex.test(email)) {
    console.log('üöÄ ~ validateEmail ~ !regex.test(email):', !regex.test(email));
    chek.classList.add('hidden');
    emailInput.classList.add('error');
    errorMessage.classList.add('error-message');
    errorMessage.textContent =
      '‚ùó –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∏–π –∞–±–æ –Ω–µ–ø–æ–≤–Ω–∏–π email! –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ—Å—Ç—å –≤–≤–æ–¥—É!';
  } else {
    emailInput.classList.remove('error');
    errorMessage.classList.remove('error-message');
    errorMessage.textContent = '';
    chek.classList.remove('hidden');
    
  }
}

// –ø—ñ–¥—Ä–∞—Ö–æ–≤—É—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Å–∏–º–æ–ª—ñ–≤ —ñ –≤–∏–≤–æ–¥–∏–º–æ —ñ–Ω—Ñ–æ
function counterNumber(messageInput) {
  const message = messageInput.value;
  const currentLength = message.length;
  countNumber.textContent = `${currentLength}/${maxCount}`;
  const avalibleLength = maxCount - currentLength;
  if (currentLength > maxCount * 0.9) {
    messageCounter.classList.remove('hidden');

    if (currentLength >= maxCount) {
      messageCounter.innerHTML = `‚ùó –í–∏ –¥–æ—Å—è–≥–ª–∏ –ª—ñ–º—ñ—Ç—É –≤ ${maxCount} —Å–∏–º–≤–æ–ª—ñ–≤. –Ø–∫—â–æ –º–∞—î—Ç–µ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å —ó—Ö –Ω–∞  
   <a href="mailto:info@goit.ua">info@goit.ua</a>.`;
      messageCounter.style.bottom = '0';
    } else {
      messageCounter.textContent = `‚ö† –£ –í–∞—Å –∑–∞–ª–∏—à–∏–ª–æ—Å—è –¥–æ—Å—Ç—É–ø–Ω–∏—Ö ${avalibleLength} —Å–∏–º–≤–æ–ª—ñ–≤`;
      messageCounter.style.bottom = '16px';
    }
  } else {
    messageCounter.classList.add('hidden');
  }
}

//–∑–∞–±–æ—Ä–æ–Ω—è—î–º–æ –Ω–∞–±—ñ—Ä —Ç–µ–∫—Å—Ç—É, –∫–æ–ª–∏ –¥–æ—Å—è–≥–Ω—É—Ç–æ –º–∞–∫–∏–º–∞–ª—å–Ω–æ—Ö –∫—ñ–ª—å–∫–æ—Å—Ç—ñ —Ç–µ–∫—Å—Ç—É
feedbackForm.addEventListener('keydown', stopInputMsg);

function stopInputMsg(event) {
  console.log(
    'üöÄ ~ stopInputMsg ~ event.target.tagName:',
    event.target.tagName
  );
  if (event.target.tagName.toLowerCase() !== 'textarea') {
    return;
  }
  if (
    event.target.value.length >= maxCount &&
    event.key !== 'Delete' &&
    event.code !== 'Backspace' &&
    event.code !== 'ArrowRight' &&
    event.code !== 'ArrowLeft' &&
    event.code !== 'ArrowUp' &&
    event.code !== 'ArrowDown'
  ) {
    event.preventDefault();
  }
}

//–î–æ–∑–æ–ª—è—î–º–æ –≤—Å—Ç–∞–≤–∫—É —Ç—ñ–ª—å–∫–∏ —Ç–µ–∫—Å—Ç—É –∑ –¥–æ—Å—Ç—É–ø–Ω–æ—é –∫—ñ–ª—å–∫—ñ—Å—Ç—é —Å–∏–º–≤–æ–ª—ñ–≤
messageInput.addEventListener('paste', cutPaste);

function cutPaste(event) {
  event.preventDefault();
  const message = event.target.value;
  const availableLength = maxCount - message.length;
  const pasteText = event.clipboardData.getData('text');
  const cutPasteMessage = pasteText.substring(0, availableLength);
  event.target.value = message + cutPasteMessage;
  counterNumber(event.target);
  saveToLocalStr(event);
}
